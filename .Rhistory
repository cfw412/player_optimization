min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3))
# luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
#                            (log(max_zscore - min_zscore + .9999))) - .9999),3))
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
generate_plot(team_data %>% filter(leagueYear == 2019))
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_for - total_points_against) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3))
# luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
#                            (log(max_zscore - min_zscore + .9999))) - .9999),3))
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_for - total_points_against) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
luck_index = round(abs((log(zscore - min_zscore)) /
(log(max_zscore - min_zscore))),3))
# luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
#                            (log(max_zscore - min_zscore + .9999))) - .9999),3))
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
generate_plot(team_data %>% filter(leagueYear == 2019))
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - total_points_for) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
luck_index = round(abs((log(zscore - min_zscore)) /
(log(max_zscore - min_zscore))),3)
)
# luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
#                            (log(max_zscore - min_zscore + .9999))) - .9999),3))
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - total_points_for) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3)
)
# luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
#                            (log(max_zscore - min_zscore + .9999))) - .9999),3))
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - total_points_for) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
luck_index = round(abs((log(zscore - min_zscore)) /
(log(max_zscore - min_zscore))),3)
# luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
#                   (log(max_zscore - min_zscore + .9999))) - .9999),3)
)
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - total_points_for) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3)
)
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
generate_plot(team_data %>% filter(leagueYear == 2019))
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - total_points_for) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
luck_index = round(1-abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3)
)
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
generate_plot(team_data %>% filter(leagueYear == 2019))
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - avg_total_points_scored) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
luck_index = round(1-abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3)
)
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
generate_plot(team_data %>% filter(leagueYear == 2019))
generate_plot(team_data %>% filter(leagueYear == 2018))
##########################################################
### Best luck index calculation takes z-score per game ###
##########################################################
home_data <- matchups %>%
group_by(leagueYear, homeTeamId) %>%
summarise(total_points_for_home = sum(homeScore),
total_points_against_home = sum(awayScore))
away_data <- matchups %>%
group_by(leagueYear, awayTeamId) %>%
summarise(total_points_for_away = sum(awayScore),
total_points_against_away = sum(homeScore))
team_data <- full_join(home_data, away_data, by = c("leagueYear", "homeTeamId" = "awayTeamId")) %>%
mutate(total_points_for = coalesce(total_points_for_home, 0) + coalesce(total_points_for_away, 0),
total_points_against = coalesce(total_points_against_home, 0) + coalesce(total_points_against_away, 0)) %>%
rename(teamId = homeTeamId) %>%
select(leagueYear, teamId, total_points_for, total_points_against)
avg_points_scored_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_against), list(name = mean)) %>%
rename(avg_total_points_scored = name)
team_data = team_data %>%
inner_join(y=avg_points_scored_by_year, by=c("leagueYear"))
std_dev_by_year = team_data %>%
group_by(leagueYear) %>%
summarise_at(vars(total_points_for), list(name=sd)) %>%
rename(std_dev = name)
team_data = team_data %>%
inner_join(y=std_dev_by_year, by=c("leagueYear"))
team_data = team_data %>%
group_by(leagueYear) %>%
mutate(zscore = (total_points_against - avg_total_points_scored) / std_dev,
min_zscore = round(min(zscore),3),
max_zscore = round(max(zscore),3),
# luck_index = round(abs((log(zscore - min_zscore)) /
#                   (log(max_zscore - min_zscore))),3)
luck_index = round(abs(((log(zscore - min_zscore + 1.01)) /
(log(max_zscore - min_zscore + .9999))) - .9999),3)
)
team_data = team_data %>%
inner_join(y=teams, by=c("teamId")) %>%
select(teamId,
fullName,
leagueYear,
total_points_for,
total_points_against,
avg_total_points_scored,
std_dev,
zscore,
min_zscore,
max_zscore,
luck_index)
team_data
generate_plot(team_data %>% filter(leagueYear == 2018))
generate_plot(team_data %>% filter(leagueYear == 2019))
generate_plot(team_data %>% filter(leagueYear == 2021))
generate_plot(team_data %>% filter(leagueYear == 2022))
generate_plot(team_data %>% filter(leagueYear == 2023))
generate_plot(team_data %>% filter(leagueYear == 2019))
generate_plot(team_data %>% filter(leagueYear == 2019))
generate_plot(team_data %>% filter(leagueYear == 2018))
generate_plot(team_data %>% filter(leagueYear == 2019))
generate_plot(team_data %>% filter(leagueYear == 2020))
generate_plot(team_data %>% filter(leagueYear == 2021))
generate_plot(team_data %>% filter(leagueYear == 2022))
generate_plot(team_data %>% filter(leagueYear == 2023))
library(shiny); runApp('Desktop/Personal Projects/Player_Optimization/player_optimization/Player_Optimization_App - Reactable.R')
